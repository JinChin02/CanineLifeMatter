!SESSION 2022-07-23 17:45:45.170 -----------------------------------------------
eclipse.buildId=4.24.0.I20220607-0700
java.version=17.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=zh_CN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file C:\Users\nirdo\OneDrive - Douglas College\Desktop\4495BackEnd\.metadata\.bak_0.log
Created Time: 2022-07-23 17:45:56.245

!ENTRY org.eclipse.core.runtime 4 0 2022-07-23 17:45:56.246
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list@2x.png
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:208)
	at org.eclipse.jface.resource.URLImageDescriptor.getStream(URLImageDescriptor.java:167)
	at org.eclipse.jface.resource.URLImageDescriptor.getImageData(URLImageDescriptor.java:135)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageDataProvider.getImageData(URLImageDescriptor.java:78)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImageDataAtZoom(DPIUtil.java:404)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:717)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:283)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:290)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:268)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.getImage(TrimStack.java:816)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.updateTrimStackItems(TrimStack.java:881)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.createWidget(TrimStack.java:636)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:344)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:227)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:94)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:37)
	at org.eclipse.e4.ui.workbench.renderers.swt.ToolControlRenderer.createWidget(ToolControlRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.TrimBarRenderer.processContents(TrimBarRenderer.java:109)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:680)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.core.runtime 4 0 2022-07-23 17:45:56.247
!MESSAGE Invalid input url:platform:/plugin/org.eclipse.mylyn.tasks.ui/icons/eview16/task-list.png
!STACK 0
java.io.IOException: Unable to resolve plug-in "org.eclipse.mylyn.tasks.ui".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:208)
	at org.eclipse.jface.resource.URLImageDescriptor.getStream(URLImageDescriptor.java:167)
	at org.eclipse.jface.resource.URLImageDescriptor.getImageData(URLImageDescriptor.java:135)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageDataProvider.getImageData(URLImageDescriptor.java:78)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImageDataAtZoom(DPIUtil.java:407)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:717)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:283)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:290)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:268)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.getImage(TrimStack.java:816)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.updateTrimStackItems(TrimStack.java:881)
	at org.eclipse.e4.ui.workbench.addons.minmax.TrimStack.createWidget(TrimStack.java:636)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:403)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:344)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:227)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:94)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:37)
	at org.eclipse.e4.ui.workbench.renderers.swt.ToolControlRenderer.createWidget(ToolControlRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.TrimBarRenderer.processContents(TrimBarRenderer.java:109)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:680)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.egit.ui 2 0 2022-07-23 17:45:56.468
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\nirdo'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
<<<<<<< HEAD

!ENTRY org.eclipse.jdt.core 4 4 2022-07-23 11:09:19.216
!MESSAGE Could not retrieve declared methods
!STACK 0
org.eclipse.core.runtime.OperationCanceledException
	at org.eclipse.jdt.internal.core.AbstractClassFile.getClassFileContent(AbstractClassFile.java:237)
	at org.eclipse.jdt.internal.core.ClassFile.getJarBinaryTypeInfo(ClassFile.java:240)
	at org.eclipse.jdt.internal.core.ClassFile.getBinaryTypeInfo(ClassFile.java:201)
	at org.eclipse.jdt.internal.core.ClassFile.buildStructure(ClassFile.java:92)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.SourceRefElement.generateInfos(SourceRefElement.java:113)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.BinaryType.getElementInfo(BinaryType.java:288)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:314)
	at org.eclipse.jdt.internal.core.SearchableEnvironment.createAnswer(SearchableEnvironment.java:235)
	at org.eclipse.jdt.internal.core.SearchableEnvironment.find(SearchableEnvironment.java:186)
	at org.eclipse.jdt.internal.core.SearchableEnvironment.findType(SearchableEnvironment.java:515)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.lambda$0(LookupEnvironment.java:237)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForTypeFromModules(LookupEnvironment.java:381)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:236)
	at org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:114)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(BinaryTypeBinding.java:248)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveTypesFor(BinaryTypeBinding.java:1892)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.availableMethods(BinaryTypeBinding.java:433)
	at org.eclipse.jdt.core.dom.TypeBinding.getDeclaredMethods(TypeBinding.java:293)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.hasFieldWithName(UnresolvedElementsSubProcessor.java:591)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.addSimilarVariableProposals(UnresolvedElementsSubProcessor.java:531)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.getVariableProposals(UnresolvedElementsSubProcessor.java:315)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:405)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:360)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionCollector.safeRun(JavaCorrectionProcessor.java:381)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:341)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:336)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:465)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:115)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.computeCompletionProposals(ProblemHover.java:89)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.<init>(ProblemHover.java:74)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover.createAnnotationInfo(ProblemHover.java:178)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover.getHoverInfo2(AbstractAnnotationHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
<<<<<<< HEAD

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-14 12:20:40.076
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.FBpaFipu

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-14 12:20:40.077
!MESSAGE unsubscribing from classpath changes: sts4.classpath.FBpaFipu

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-14 12:20:40.077
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-14 12:20:40.078
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.FBpaFipu => OK

!ENTRY org.eclipse.debug.core 4 2 2022-07-14 12:20:40.541
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.debug.core".
!STACK 0
org.eclipse.swt.SWTException: Device is disposed
	at org.eclipse.swt.SWT.error(SWT.java:4907)
	at org.eclipse.swt.SWT.error(SWT.java:4822)
	at org.eclipse.swt.SWT.error(SWT.java:4793)
	at org.eclipse.swt.widgets.Display.error(Display.java:1272)
	at org.eclipse.swt.widgets.Display.asyncExec(Display.java:789)
	at org.springframework.ide.eclipse.boot.restart.RestartConsolePageParticipant.handleDebugEvents(RestartConsolePageParticipant.java:114)
	at org.eclipse.debug.core.DebugPlugin$EventNotifier.run(DebugPlugin.java:1214)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch(DebugPlugin.java:1248)
	at org.eclipse.debug.core.DebugPlugin$EventDispatchJob.run(DebugPlugin.java:480)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.debug.core 4 125 2022-07-14 12:20:40.542
!MESSAGE An exception occurred while dispatching debug events.
!STACK 0
org.eclipse.swt.SWTException: Device is disposed
	at org.eclipse.swt.SWT.error(SWT.java:4907)
	at org.eclipse.swt.SWT.error(SWT.java:4822)
	at org.eclipse.swt.SWT.error(SWT.java:4793)
	at org.eclipse.swt.widgets.Display.error(Display.java:1272)
	at org.eclipse.swt.widgets.Display.asyncExec(Display.java:789)
	at org.springframework.ide.eclipse.boot.restart.RestartConsolePageParticipant.handleDebugEvents(RestartConsolePageParticipant.java:114)
	at org.eclipse.debug.core.DebugPlugin$EventNotifier.run(DebugPlugin.java:1214)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch(DebugPlugin.java:1248)
	at org.eclipse.debug.core.DebugPlugin$EventDispatchJob.run(DebugPlugin.java:480)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2022-07-23 09:13:51.895 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-23 09:13:58.889
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-23 09:13:58.889
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@d5eca06,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@79169472,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-23 09:13:58.889
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@304cad3a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@628cb8e0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:03.587
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:03.588
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@65616267[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:03.591
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:03.647
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-23 09:14:05.054
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-23 09:14:05.055
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-23 09:14:05.100
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:12.063
!MESSAGE Boot LS startup time from start to initialized: 8463ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:12.287
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.cNdtbphqisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:12.291
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:12.295
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:12.297
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:12.298
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:12.298
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.cNdtbphq => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:12.343
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:12.348
!MESSAGE buffering callback sts4.classpath.cNdtbphq cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:12.356
!MESSAGE executing callback sts4.classpath.cNdtbphq 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:14:14.374
!MESSAGE executing callback sts4.classpath.cNdtbphq FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2022-07-23 09:14:14.375
!MESSAGE 
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1950)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2085)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:51:47.112
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.cNdtbphq

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:51:47.113
!MESSAGE unsubscribing from classpath changes: sts4.classpath.cNdtbphq

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:51:47.114
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:51:47.115
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.cNdtbphq => OK

!ENTRY org.eclipse.ui 2 2 2022-07-23 09:51:47.606
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-23 09:53:49.172 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-23 09:54:17.701
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-23 09:54:17.701
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@d5eca06,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@79169472,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-23 09:54:17.701
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@304cad3a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@628cb8e0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:22.278
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:22.279
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@6cd9e69f[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:22.283
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:22.326
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-23 09:54:23.695
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-23 09:54:23.698
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-23 09:54:23.789
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:25.418
!MESSAGE Boot LS startup time from start to initialized: 3127ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:25.588
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.MzacdXIjisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:25.591
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:25.593
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:25.594
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:25.594
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:25.595
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.MzacdXIj => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:25.619
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:25.622
!MESSAGE buffering callback sts4.classpath.MzacdXIj cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:25.623
!MESSAGE executing callback sts4.classpath.MzacdXIj 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 09:54:26.027
!MESSAGE executing callback sts4.classpath.MzacdXIj SUCCESS [done]

!ENTRY org.eclipse.ui 2 2 2022-07-23 10:39:50.902
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)

!ENTRY org.eclipse.ui.ide 4 4 2022-07-23 10:39:51.326
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Font.<init>(Font.java:111)
	at org.eclipse.buildship.ui.internal.util.font.FontUtils.getDefaultDialogFont(FontUtils.java:34)
	at org.eclipse.buildship.ui.internal.util.widget.AdvancedOptionsGroup.<init>(AdvancedOptionsGroup.java:59)
	at org.eclipse.buildship.ui.internal.util.widget.GradleProjectSettingsComposite.createAdvancedOptionsGroup(GradleProjectSettingsComposite.java:105)
	at org.eclipse.buildship.ui.internal.util.widget.GradleProjectSettingsComposite.<init>(GradleProjectSettingsComposite.java:67)
	at org.eclipse.buildship.ui.internal.util.widget.GradleProjectSettingsComposite.<init>(GradleProjectSettingsComposite.java:38)
	at org.eclipse.buildship.ui.internal.util.widget.GradleProjectSettingsComposite$GradleProjectSettingsCompositeBuilder.build(GradleProjectSettingsComposite.java:253)
	at org.eclipse.buildship.ui.internal.preferences.GradleWorkbenchPreferencePage.createContents(GradleWorkbenchPreferencePage.java:61)
	at org.eclipse.jface.preference.PreferencePage.createControl(PreferencePage.java:244)
	at org.eclipse.jface.preference.PreferenceDialog.createPageControl(PreferenceDialog.java:1433)
	at org.eclipse.jface.preference.PreferenceDialog$8.run(PreferenceDialog.java:1196)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.preference.PreferenceDialog.showPage(PreferenceDialog.java:1188)
	at org.eclipse.ui.internal.dialogs.FilteredPreferenceDialog.showPage(FilteredPreferenceDialog.java:630)
	at org.eclipse.jface.preference.PreferenceDialog$5.lambda$0(PreferenceDialog.java:660)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jface.preference.PreferenceDialog$5.selectionChanged(PreferenceDialog.java:657)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:821)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.handlePostSelect(StructuredViewer.java:1191)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent(OpenStrategy.java:284)
	at org.eclipse.jface.util.OpenStrategy$1.lambda$1(OpenStrategy.java:438)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:66)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-07-23 10:39:51.329
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Font.<init>(Font.java:111)
	at org.eclipse.buildship.ui.internal.util.font.FontUtils.getDefaultDialogFont(FontUtils.java:34)
	at org.eclipse.buildship.ui.internal.util.widget.GradleDistributionGroup.createWidgets(GradleDistributionGroup.java:95)
	at org.eclipse.buildship.ui.internal.util.widget.GradleDistributionGroup.<init>(GradleDistributionGroup.java:86)
	at org.eclipse.buildship.ui.internal.util.widget.GradleProjectSettingsComposite.createGradleDistributionGroup(GradleProjectSettingsComposite.java:100)
	at org.eclipse.buildship.ui.internal.util.widget.GradleProjectSettingsComposite.<init>(GradleProjectSettingsComposite.java:66)
	at org.eclipse.buildship.ui.internal.util.widget.GradleProjectSettingsComposite.<init>(GradleProjectSettingsComposite.java:38)
	at org.eclipse.buildship.ui.internal.util.widget.GradleProjectSettingsComposite$GradleProjectSettingsCompositeBuilder.build(GradleProjectSettingsComposite.java:253)
	at org.eclipse.buildship.ui.internal.preferences.GradleWorkbenchPreferencePage.createContents(GradleWorkbenchPreferencePage.java:61)
	at org.eclipse.jface.preference.PreferencePage.createControl(PreferencePage.java:244)
	at org.eclipse.jface.preference.PreferenceDialog.createPageControl(PreferenceDialog.java:1433)
	at org.eclipse.jface.preference.PreferenceDialog$8.run(PreferenceDialog.java:1196)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.preference.PreferenceDialog.showPage(PreferenceDialog.java:1188)
	at org.eclipse.ui.internal.dialogs.FilteredPreferenceDialog.showPage(FilteredPreferenceDialog.java:630)
	at org.eclipse.jface.preference.PreferenceDialog$5.lambda$0(PreferenceDialog.java:660)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jface.preference.PreferenceDialog$5.selectionChanged(PreferenceDialog.java:657)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:821)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.handlePostSelect(StructuredViewer.java:1191)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent(OpenStrategy.java:284)
	at org.eclipse.jface.util.OpenStrategy$1.lambda$1(OpenStrategy.java:438)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:66)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 12:57:28.201
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.MzacdXIj

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 12:57:28.202
!MESSAGE unsubscribing from classpath changes: sts4.classpath.MzacdXIj

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 12:57:28.202
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 12:57:28.203
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.MzacdXIj => OK
!SESSION 2022-07-23 13:15:59.658 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-23 13:16:05.523
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-23 13:16:05.523
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7bb888b7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5825932c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-23 13:16:05.523
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@277dddcf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@321c01c2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:09.476
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:09.478
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@42f94a56[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:09.481
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:09.529
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-23 13:16:10.739
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-23 13:16:10.740
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-23 13:16:10.780
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:12.218
!MESSAGE Boot LS startup time from start to initialized: 2727ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:12.379
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.wPTfrJrHisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:12.382
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:12.384
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:12.385
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:12.386
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:12.386
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.wPTfrJrH => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:12.400
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:12.404
!MESSAGE buffering callback sts4.classpath.wPTfrJrH cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:12.404
!MESSAGE executing callback sts4.classpath.wPTfrJrH 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:16:12.811
!MESSAGE executing callback sts4.classpath.wPTfrJrH SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:18:25.834
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.wPTfrJrH

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:18:25.835
!MESSAGE unsubscribing from classpath changes: sts4.classpath.wPTfrJrH

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:18:25.835
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:18:25.836
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.wPTfrJrH => OK

!ENTRY org.eclipse.ui 2 2 2022-07-23 13:18:26.221
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
=======
>>>>>>> 430c204dd607238475d02a3063aca20aaad4b1bb
!SESSION 2022-07-23 13:19:11.972 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.core.resources 4 567 2022-07-23 13:19:24.035
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2022-07-23 13:19:24.035
!MESSAGE Could not read metadata for '.org.eclipse.egit.core.cmp'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/.org.eclipse.egit.core.cmp)[567]: java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:868)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:724)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1555)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2480)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2231)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:475)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.lambda$2(BundleContextImpl.java:808)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:802)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:759)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1019)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:365)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:404)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:384)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:471)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:403)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2022-07-23 13:19:24.036
!MESSAGE The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!STACK 0
java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:868)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:724)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1555)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2480)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2231)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:475)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.lambda$2(BundleContextImpl.java:808)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:802)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:759)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1019)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:365)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:404)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:384)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:471)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:403)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2022-07-23 13:19:24.358
!MESSAGE Unable to load resource file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi
!STACK 0
org.eclipse.emf.ecore.resource.impl.ResourceSetImpl$1DiagnosticWrappedException: org.xml.sax.SAXParseExceptionpublicId: file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi; systemId: file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi; lineNumber: 3; columnNumber: 2; The content of elements must consist of well-formed character data or markup.
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.handleDemandLoadException(ResourceSetImpl.java:319)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:278)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:406)
	at org.eclipse.e4.ui.internal.workbench.ResourceHandler.getResource(ResourceHandler.java:290)
	at org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadResource(ResourceHandler.java:266)
	at org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadMostRecentModel(ResourceHandler.java:169)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.loadApplicationModel(E4Application.java:371)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.createE4Workbench(E4Application.java:247)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:573)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.xml.sax.SAXParseExceptionpublicId: file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi; systemId: file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi; lineNumber: 3; columnNumber: 2; The content of elements must consist of well-formed character data or markup.
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1471)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2588)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2678)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:541)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:888)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:824)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1224)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:635)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:324)
	at org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(XMLLoadImpl.java:175)
	at org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad(XMLResourceImpl.java:261)
	at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1563)
	at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1342)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:259)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:274)
	... 23 more

!ENTRY org.eclipse.e4.ui.workbench 4 0 2022-07-23 13:19:24.360
!MESSAGE The persisted application model has no top-level window. Reinitializing with the default application model.
!STACK 0
java.lang.Exception
	at org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadMostRecentModel(ResourceHandler.java:174)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.loadApplicationModel(E4Application.java:371)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.createE4Workbench(E4Application.java:247)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:573)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jface 2 0 2022-07-23 13:19:26.375
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-23 13:19:26.375
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@77eb0e47,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3a034950,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-23 13:19:26.375
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@331eb953,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@38f7a20,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-23 13:19:29.071
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-23 13:19:29.072
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-23 13:19:29.104
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:44.308
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:44.308
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@52718e3b[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:44.310
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:44.355
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:46.415
!MESSAGE Boot LS startup time from start to initialized: 2095ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:46.541
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.UNmfqVOjisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:46.543
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:46.545
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:46.545
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:46.546
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.UNmfqVOj => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:46.546
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:46.553
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:46.557
!MESSAGE buffering callback sts4.classpath.UNmfqVOj cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:46.557
!MESSAGE executing callback sts4.classpath.UNmfqVOj 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:46.942
!MESSAGE executing callback sts4.classpath.UNmfqVOj SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:50.296
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.UNmfqVOj

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:50.297
!MESSAGE unsubscribing from classpath changes: sts4.classpath.UNmfqVOj

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:50.297
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 13:19:50.298
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.UNmfqVOj => OK

!ENTRY org.eclipse.ui 2 2 2022-07-23 13:19:50.632
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-23 15:31:30.120 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-23 15:31:42.263
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-23 15:31:42.263
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@16718e1b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7fb313e3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-23 15:31:42.263
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@771ede0d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1fd73dcb,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:48.092
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:48.093
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@2b778ebe[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:48.097
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:48.151
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-23 15:31:49.982
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-23 15:31:49.983
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-23 15:31:50.023
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:51.176
!MESSAGE Boot LS startup time from start to initialized: 3071ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:51.405
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.YXXwvgkMisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:51.410
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:51.413
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:51.414
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:51.415
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:51.415
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.YXXwvgkM => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:51.446
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:51.450
!MESSAGE buffering callback sts4.classpath.YXXwvgkM cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:51.451
!MESSAGE executing callback sts4.classpath.YXXwvgkM 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 15:31:51.909
!MESSAGE executing callback sts4.classpath.YXXwvgkM SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:28:06.176
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.YXXwvgkM

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:28:06.180
!MESSAGE unsubscribing from classpath changes: sts4.classpath.YXXwvgkM

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:28:06.181
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:28:06.182
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.YXXwvgkM => OK

!ENTRY org.eclipse.ui 2 2 2022-07-23 18:28:06.757
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
=======
>>>>>>> 779d94345b699447727c99e74798d09a892249dc
!SESSION 2022-07-23 18:28:52.357 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.e4.ui.workbench 4 0 2022-07-23 18:28:59.232
!MESSAGE Unable to load resource file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi
!STACK 0
org.eclipse.emf.ecore.resource.impl.ResourceSetImpl$1DiagnosticWrappedException: org.xml.sax.SAXParseExceptionpublicId: file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi; systemId: file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi; lineNumber: 99; columnNumber: 2; The content of elements must consist of well-formed character data or markup.
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.handleDemandLoadException(ResourceSetImpl.java:319)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:278)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:406)
	at org.eclipse.e4.ui.internal.workbench.ResourceHandler.getResource(ResourceHandler.java:290)
	at org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadResource(ResourceHandler.java:266)
	at org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadMostRecentModel(ResourceHandler.java:169)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.loadApplicationModel(E4Application.java:371)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.createE4Workbench(E4Application.java:247)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:573)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.xml.sax.SAXParseExceptionpublicId: file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi; systemId: file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi; lineNumber: 99; columnNumber: 2; The content of elements must consist of well-formed character data or markup.
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1471)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2588)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2678)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:541)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:888)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:824)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1224)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:635)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:324)
	at org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(XMLLoadImpl.java:175)
	at org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad(XMLResourceImpl.java:261)
	at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1563)
	at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1342)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:259)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:274)
	... 23 more

!ENTRY org.eclipse.e4.ui.workbench 4 0 2022-07-23 18:28:59.234
!MESSAGE The persisted application model has no top-level window. Reinitializing with the default application model.
!STACK 0
java.lang.Exception
	at org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadMostRecentModel(ResourceHandler.java:174)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.loadApplicationModel(E4Application.java:371)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.createE4Workbench(E4Application.java:247)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:573)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jface 2 0 2022-07-23 18:29:01.739
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-23 18:29:01.739
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6e6ec9c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7aecff85,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-23 18:29:01.739
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3393aa46,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4f0381cd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-23 18:29:04.654
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-23 18:29:04.655
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-23 18:29:04.686
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:51.158
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:51.159
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@34949367[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:51.161
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:51.195
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:53.775
!MESSAGE Boot LS startup time from start to initialized: 2604ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:54.002
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.XxNlgLFWisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:54.005
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:54.008
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:54.010
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:54.010
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:54.011
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.XxNlgLFW => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:54.024
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:54.027
!MESSAGE buffering callback sts4.classpath.XxNlgLFW cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:54.028
!MESSAGE executing callback sts4.classpath.XxNlgLFW 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:29:54.444
!MESSAGE executing callback sts4.classpath.XxNlgLFW SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:57:22.711
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.XxNlgLFW

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:57:22.712
!MESSAGE unsubscribing from classpath changes: sts4.classpath.XxNlgLFW

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:57:22.712
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 18:57:22.713
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.XxNlgLFW => OK

!ENTRY org.eclipse.ui 2 2 2022-07-23 18:57:23.214
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-23 19:54:11.120 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-23 19:54:19.863
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-23 19:54:19.863
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1d86b636,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e0c03bd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-23 19:54:19.863
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@61e4a072,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@32f2de5c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:24.469
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:24.471
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@59f881e8[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:24.474
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:24.540
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-23 19:54:26.361
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-23 19:54:26.362
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-23 19:54:26.413
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:33.745
!MESSAGE Boot LS startup time from start to initialized: 9258ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:34.242
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.tkPmVWarisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:34.247
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:34.250
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:34.252
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:34.253
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:34.253
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.tkPmVWar => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:34.287
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:34.292
!MESSAGE buffering callback sts4.classpath.tkPmVWar cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:34.293
!MESSAGE executing callback sts4.classpath.tkPmVWar 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 19:54:36.300
!MESSAGE executing callback sts4.classpath.tkPmVWar FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2022-07-23 19:54:36.300
!MESSAGE 
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1950)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2085)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.lsp4e 2 0 2022-07-23 20:01:12.279
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2022-07-23 20:23:24.896
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2022-07-23 20:36:38.518
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 21:48:45.824
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.tkPmVWar

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 21:48:45.825
!MESSAGE unsubscribing from classpath changes: sts4.classpath.tkPmVWar

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 21:48:45.825
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-23 21:48:45.826
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.tkPmVWar => OK

!ENTRY org.eclipse.ui 2 2 2022-07-23 21:48:46.378
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-24 09:04:05.558 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-24 09:04:15.120
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-24 09:04:15.120
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@171b0d3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@63d43a5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-24 09:04:15.120
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@55159007,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@edf4973,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:21.439
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:21.440
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@1514ef36[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:21.444
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:21.503
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-24 09:04:22.745
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-24 09:04:22.746
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-24 09:04:22.790
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:33.346
!MESSAGE Boot LS startup time from start to initialized: 11892ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:33.552
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.ydsLRAPyisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:33.556
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:33.559
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:33.560
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:33.560
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:33.561
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.ydsLRAPy => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:33.595
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:33.600
!MESSAGE buffering callback sts4.classpath.ydsLRAPy cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:33.601
!MESSAGE executing callback sts4.classpath.ydsLRAPy 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 09:04:35.618
!MESSAGE executing callback sts4.classpath.ydsLRAPy FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2022-07-24 09:04:35.619
!MESSAGE 
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1950)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2085)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.lsp4e 2 0 2022-07-24 09:19:06.305
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:10:08.457
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.ydsLRAPy

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:10:08.459
!MESSAGE unsubscribing from classpath changes: sts4.classpath.ydsLRAPy

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:10:08.459
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:10:08.459
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.ydsLRAPy => OK

!ENTRY org.eclipse.ui 2 2 2022-07-24 10:10:08.790
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-24 10:29:21.751 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-24 10:29:28.364
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-24 10:29:28.364
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@63e81ac6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@45775a15,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-24 10:29:28.364
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2396dc4e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7bb888b7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:33.102
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:33.103
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@57ff379[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:33.107
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:33.159
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-24 10:29:34.761
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-24 10:29:34.762
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-24 10:29:34.819
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:36.660
!MESSAGE Boot LS startup time from start to initialized: 3543ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:36.992
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.YETwVeKLisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:36.998
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:37.001
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:37.002
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:37.003
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:37.004
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.YETwVeKL => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:37.047
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:37.054
!MESSAGE buffering callback sts4.classpath.YETwVeKL cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:37.056
!MESSAGE executing callback sts4.classpath.YETwVeKL 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 10:29:37.897
!MESSAGE executing callback sts4.classpath.YETwVeKL SUCCESS [done]

!ENTRY org.eclipse.ui 2 2 2022-07-24 10:31:44.521
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)

!ENTRY org.eclipse.lsp4e 2 0 2022-07-24 10:42:01.128
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2022-07-24 10:42:15.056
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2022-07-24 11:19:33.026
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1950)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2085)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2022-07-24 11:19:39.595
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2022-07-24 11:20:38.621
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2022-07-24 11:22:58.276
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2022-07-24 11:36:14.048
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2022-07-24 11:36:58.622
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 11:51:33.128
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.YETwVeKL

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 11:51:33.128
!MESSAGE unsubscribing from classpath changes: sts4.classpath.YETwVeKL

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 11:51:33.129
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 11:51:33.129
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.YETwVeKL => OK
!SESSION 2022-07-24 13:22:00.945 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-24 13:22:09.820
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-24 13:22:09.820
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@63e81ac6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@45775a15,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-24 13:22:09.820
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2396dc4e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7bb888b7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:16.120
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:16.121
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@4feea840[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:16.125
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:16.189
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-24 13:22:17.979
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-24 13:22:17.980
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-24 13:22:18.019
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:19.701
!MESSAGE Boot LS startup time from start to initialized: 3564ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:19.936
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.NGAWbLsGisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:19.939
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:19.942
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:19.942
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:19.943
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:19.943
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.NGAWbLsG => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:19.974
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:19.978
!MESSAGE buffering callback sts4.classpath.NGAWbLsG cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:19.979
!MESSAGE executing callback sts4.classpath.NGAWbLsG 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 13:22:20.435
!MESSAGE executing callback sts4.classpath.NGAWbLsG SUCCESS [done]

!ENTRY org.eclipse.ui 4 0 2022-07-24 13:22:43.125
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.debug.internal.ui.contexts.DebugContextManager.addDebugContextListener(DebugContextManager.java:178)
	at org.eclipse.jdt.internal.debug.ui.EvaluationContextManager.<init>(EvaluationContextManager.java:72)
	at org.eclipse.jdt.internal.debug.ui.EvaluationContextManager$1.run(EvaluationContextManager.java:80)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:21:42.147
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.NGAWbLsG

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:21:42.147
!MESSAGE unsubscribing from classpath changes: sts4.classpath.NGAWbLsG

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:21:42.148
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:21:42.149
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.NGAWbLsG => OK

!ENTRY org.eclipse.ui 2 2 2022-07-24 16:21:42.433
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-24 16:26:20.976 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-24 16:26:26.736
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-24 16:26:26.736
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@54c697c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62075e3d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-24 16:26:26.736
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@63e81ac6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@45775a15,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:30.742
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:30.744
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@2700eef4[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:30.747
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:30.792
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-24 16:26:31.748
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-24 16:26:31.751
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-24 16:26:31.791
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:33.625
!MESSAGE Boot LS startup time from start to initialized: 2868ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:33.777
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.ceQjoqCVisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:33.780
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:33.781
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:33.782
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:33.783
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:33.783
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.ceQjoqCV => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:33.795
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:33.800
!MESSAGE buffering callback sts4.classpath.ceQjoqCV cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:33.801
!MESSAGE executing callback sts4.classpath.ceQjoqCV 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:34.181
!MESSAGE executing callback sts4.classpath.ceQjoqCV SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:36.273
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.ceQjoqCV

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:36.274
!MESSAGE unsubscribing from classpath changes: sts4.classpath.ceQjoqCV

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:36.274
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:26:36.274
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.ceQjoqCV => OK

!ENTRY org.eclipse.ui 2 2 2022-07-24 16:26:36.749
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)

!ENTRY org.eclipse.oomph.ui 4 0 2022-07-24 16:26:37.091
!MESSAGE java.lang.ExceptionInInitializerError
!STACK 0
java.lang.ExceptionInInitializerError
	at org.eclipse.oomph.setup.ui.recorder.RecorderManager.<clinit>(RecorderManager.java:121)
	at org.eclipse.oomph.setup.ui.SetupUIPlugin.performStartup(SetupUIPlugin.java:216)
	at org.eclipse.oomph.setup.ui.EarlyStartup.earlyStartup(EarlyStartup.java:22)
	at org.eclipse.oomph.internal.ui.EarlyStart.run(EarlyStart.java:118)
	at org.eclipse.oomph.internal.ui.EarlyStart$1.run(EarlyStart.java:97)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.lang.NullPointerException
	at org.eclipse.oomph.p2.internal.core.AgentManagerImpl.getCurrentAgent(AgentManagerImpl.java:168)
	at org.eclipse.oomph.p2.core.P2Util.getCurrentProvisioningAgent(P2Util.java:84)
	at org.eclipse.oomph.setup.internal.core.util.SetupCoreUtil.<clinit>(SetupCoreUtil.java:162)
	... 6 more
<<<<<<< HEAD
!SESSION 2022-07-24 16:45:50.754 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-24 16:45:56.106
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-24 16:45:56.106
=======
!SESSION 2022-07-24 16:31:46.073 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.core.resources 4 567 2022-07-24 16:31:54.086
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2022-07-24 16:31:54.086
!MESSAGE Could not read metadata for '.org.eclipse.egit.core.cmp'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/.org.eclipse.egit.core.cmp)[567]: java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:868)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:724)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1555)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2480)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2231)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:475)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:814)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:806)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:763)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1028)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:511)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:572)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:401)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:476)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:170)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2022-07-24 16:31:54.087
!MESSAGE The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!STACK 0
java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:868)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:724)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1555)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2480)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2231)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:475)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:814)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:806)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:763)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1028)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:511)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:572)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:401)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:476)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:170)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)

!ENTRY org.eclipse.jface 2 0 2022-07-24 16:31:55.720
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-24 16:31:55.720
>>>>>>> origin/HighRisk_SpringBoot_20220802
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@588614f9,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3aac31b7,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@16718e1b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-24 16:45:56.106
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7fb313e3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@771ede0d,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57def953,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:00.129
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:00.131
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@6c291449[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:00.134
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:00.179
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-24 16:46:01.162
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-24 16:46:01.163
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-24 16:46:01.208
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:00.417
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:00.420
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@2eda4caa[org.springframework.tooling.boot.ls:1.27.0.202108151936(id=971)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:00.425
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:00.453
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-24 16:32:01.220
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-24 16:32:01.241
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.e4.ui.workbench 2 0 2022-07-24 16:32:01.264
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.spy.preferences.parts.PreferenceSpyPart" id and the "Preference Spy" label.It points to the non available "bundleclass://org.eclipse.pde.spy.preferences/org.eclipse.pde.spy.preferences.parts.PreferenceSpyPart" class. Bundle might have been uninstalled

!ENTRY org.eclipse.core.resources 4 2 2022-07-24 16:32:01.270
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.core.resources".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.util.JRTUtil.walkModuleImage(JRTUtil.java:173)
	at org.eclipse.jdt.internal.core.JavaProject.loadModulesInJimage(JavaProject.java:950)
	at org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(JavaProject.java:749)
	at org.eclipse.jdt.internal.core.JavaProject.computePackageFragmentRoots(JavaProject.java:653)
	at org.eclipse.jdt.internal.core.ClasspathChange.generateDelta(ClasspathChange.java:345)
	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(DeltaProcessor.java:2127)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:478)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:305)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:295)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:195)
	at org.eclipse.core.internal.resources.SavedState.processResourceChangeEvents(SavedState.java:84)
	at org.eclipse.jdt.internal.core.JavaModelManager$20$1.run(JavaModelManager.java:5416)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2333)
	at org.eclipse.jdt.internal.core.JavaModelManager$20.run(JavaModelManager.java:5407)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.egit.ui 2 0 2022-07-24 16:32:01.284
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\chinj'. If this is
>>>>>>> origin/HighRisk_SpringBoot_20220802
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:02.994
!MESSAGE Boot LS startup time from start to initialized: 2850ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:03.143
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.LYSrbFuSisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:03.146
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:03.148
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:03.149
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:03.149
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:03.150
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.LYSrbFuS => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:03.161
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:03.164
!MESSAGE buffering callback sts4.classpath.LYSrbFuS cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:03.165
!MESSAGE executing callback sts4.classpath.LYSrbFuS 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:46:03.525
!MESSAGE executing callback sts4.classpath.LYSrbFuS SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 17:47:31.562
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.LYSrbFuS

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 17:47:31.563
!MESSAGE unsubscribing from classpath changes: sts4.classpath.LYSrbFuS

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 17:47:31.563
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 17:47:31.564
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.LYSrbFuS => OK

!ENTRY org.eclipse.ui 2 2 2022-07-24 17:47:31.888
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-28 15:26:51.271 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-28 15:26:59.435
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-28 15:26:59.435
=======
!ENTRY org.eclipse.e4.ui.workbench 2 0 2022-07-24 16:32:01.292
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.debug.ui.launchView" id and the "Launch Configurations" label.It points to the non available "bundleclass://org.eclipse.debug.ui.launchview/org.eclipse.debug.ui.launchview.internal.view.LaunchViewImpl" class. Bundle might have been uninstalled

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:02.696
!MESSAGE Boot LS startup time from start to initialized: 2260ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:02.863
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.GIoXtpdzisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:02.868
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:02.872
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:02.875
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:02.878
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:02.880
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.GIoXtpdz => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:02.888
!MESSAGE classpath=98 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:02.895
!MESSAGE buffering callback sts4.classpath.GIoXtpdz cannine_life_matter false 3

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:02.898
!MESSAGE executing callback sts4.classpath.GIoXtpdz 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:03.074
!MESSAGE executing callback sts4.classpath.GIoXtpdz SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:03.427
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:03.438
!MESSAGE classpath=98 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:03.446
!MESSAGE buffering callback sts4.classpath.GIoXtpdz cannine_life_matter false 98

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:03.449
!MESSAGE executing callback sts4.classpath.GIoXtpdz 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:03.531
!MESSAGE executing callback sts4.classpath.GIoXtpdz SUCCESS [done]

!ENTRY org.eclipse.ui 2 2 2022-07-24 16:32:13.256
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:45.236
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:45.242
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:45.247
!MESSAGE buffering callback sts4.classpath.GIoXtpdz cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:45.247
!MESSAGE executing callback sts4.classpath.GIoXtpdz 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 16:32:45.337
!MESSAGE executing callback sts4.classpath.GIoXtpdz SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 17:47:01.819
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.GIoXtpdz

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 17:47:01.822
!MESSAGE unsubscribing from classpath changes: sts4.classpath.GIoXtpdz

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 17:47:01.825
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-24 17:47:01.827
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.GIoXtpdz => OK
!SESSION 2022-07-29 10:09:24.292 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-29 10:09:28.992
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-29 10:09:28.992
>>>>>>> origin/HighRisk_SpringBoot_20220802
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5825932c,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@71b6edfb,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@277dddcf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-28 15:26:59.435
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@321c01c2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@d5eca06,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2f541f60,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:05.465
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:05.466
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@50f12e3d[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:05.470
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:05.525
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-28 15:27:07.129
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-28 15:27:07.133
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-28 15:27:07.175
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:33.353
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:33.357
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@33f505fd[org.springframework.tooling.boot.ls:1.27.0.202108151936(id=971)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:33.361
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:33.406
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-29 10:09:34.357
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-29 10:09:34.364
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-29 10:09:34.404
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\chinj'. If this is
>>>>>>> origin/HighRisk_SpringBoot_20220802
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:15.610
!MESSAGE Boot LS startup time from start to initialized: 10130ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:15.939
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.AjeZzyGcisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:15.945
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:15.949
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:15.950
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:15.951
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:15.952
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.AjeZzyGc => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:15.994
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:15.999
!MESSAGE buffering callback sts4.classpath.AjeZzyGc cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:16.000
!MESSAGE executing callback sts4.classpath.AjeZzyGc 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:27:18.009
!MESSAGE executing callback sts4.classpath.AjeZzyGc FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2022-07-28 15:27:18.010
!MESSAGE 
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1950)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2085)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:31:07.088
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.AjeZzyGc

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:31:07.088
!MESSAGE unsubscribing from classpath changes: sts4.classpath.AjeZzyGc

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:31:07.089
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-28 15:31:07.090
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.AjeZzyGc => OK

!ENTRY org.eclipse.ui 2 2 2022-07-28 15:31:07.690
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-30 08:39:03.519 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-30 08:39:10.665
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-30 08:39:10.665
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:35.644
!MESSAGE Boot LS startup time from start to initialized: 2265ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:35.838
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.ZCRgLkRtisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:35.844
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:35.848
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:35.851
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:35.855
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:35.858
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.ZCRgLkRt => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:35.879
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:35.886
!MESSAGE buffering callback sts4.classpath.ZCRgLkRt cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:35.889
!MESSAGE executing callback sts4.classpath.ZCRgLkRt 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 10:09:36.209
!MESSAGE executing callback sts4.classpath.ZCRgLkRt SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 11:27:55.966
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.ZCRgLkRt

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 11:27:55.971
!MESSAGE unsubscribing from classpath changes: sts4.classpath.ZCRgLkRt

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 11:27:55.974
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 11:27:55.977
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.ZCRgLkRt => OK

!ENTRY org.eclipse.ui 2 2 2022-07-29 11:27:56.354
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-29 23:33:40.929 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-29 23:33:47.842
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-29 23:33:47.842
>>>>>>> origin/HighRisk_SpringBoot_20220802
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5481f204,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@536f389,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@171b0d3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-30 08:39:10.665
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@63d43a5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@55159007,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2b33f7a0,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:15.273
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:15.274
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@c0b3cea[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:15.277
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:15.317
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-30 08:39:16.307
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-30 08:39:16.308
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-30 08:39:16.352
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:52.510
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:52.514
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@8960f27[org.springframework.tooling.boot.ls:1.27.0.202108151936(id=971)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:52.520
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:52.568
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-29 23:33:53.685
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-29 23:33:53.695
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-29 23:33:53.733
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\chinj'. If this is
>>>>>>> origin/HighRisk_SpringBoot_20220802
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:25.306
!MESSAGE Boot LS startup time from start to initialized: 10021ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:25.512
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.tyCoyVNcisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:25.515
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:25.518
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:25.519
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:25.519
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:25.520
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.tyCoyVNc => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:25.532
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:25.536
!MESSAGE buffering callback sts4.classpath.tyCoyVNc cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:25.536
!MESSAGE executing callback sts4.classpath.tyCoyVNc 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:39:27.543
!MESSAGE executing callback sts4.classpath.tyCoyVNc FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2022-07-30 08:39:27.544
!MESSAGE 
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1950)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2085)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:36.336
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.tyCoyVNc

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:36.336
!MESSAGE unsubscribing from classpath changes: sts4.classpath.tyCoyVNc

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:36.337
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:36.338
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.tyCoyVNc => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:37.178
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:37.178
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@c0b3cea[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:37.179
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:39.103
!MESSAGE Boot LS startup time from start to initialized: 1923ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:39.182
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.cAdQqtpcisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:39.183
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:39.183
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:39.184
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:39.184
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:39.184
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.cAdQqtpc => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:39.193
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:39.196
!MESSAGE buffering callback sts4.classpath.cAdQqtpc cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:39.197
!MESSAGE executing callback sts4.classpath.cAdQqtpc 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:49:39.558
!MESSAGE executing callback sts4.classpath.cAdQqtpc SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:59:42.416
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.cAdQqtpc

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:59:42.417
!MESSAGE unsubscribing from classpath changes: sts4.classpath.cAdQqtpc

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:59:42.417
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 08:59:42.418
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.cAdQqtpc => OK

!ENTRY org.eclipse.ui 2 2 2022-07-30 08:59:42.801
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-30 09:33:07.795 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-30 09:33:14.032
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-30 09:33:14.032
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:54.964
!MESSAGE Boot LS startup time from start to initialized: 2424ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:55.164
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.UILCxwhjisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:55.168
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:55.173
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:55.176
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:55.180
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:55.182
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.UILCxwhj => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:55.203
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:55.210
!MESSAGE buffering callback sts4.classpath.UILCxwhj cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:55.212
!MESSAGE executing callback sts4.classpath.UILCxwhj 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-29 23:33:55.577
!MESSAGE executing callback sts4.classpath.UILCxwhj SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 00:12:41.821
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.UILCxwhj

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 00:12:41.824
!MESSAGE unsubscribing from classpath changes: sts4.classpath.UILCxwhj

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 00:12:41.827
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 00:12:41.830
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.UILCxwhj => OK

!ENTRY org.eclipse.ui 2 2 2022-07-30 00:12:42.296
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-30 16:27:07.650 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-30 16:27:33.802
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-30 16:27:33.802
>>>>>>> origin/HighRisk_SpringBoot_20220802
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@16718e1b,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@d0538b3,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7fb313e3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-30 09:33:14.032
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@771ede0d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1fd73dcb,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3b8c15de,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:18.020
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:18.022
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@4e541c51[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:18.025
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:18.083
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-30 09:33:19.394
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-30 09:33:19.395
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-30 09:33:19.434
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:40.706
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:40.709
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@3423b0fe[org.springframework.tooling.boot.ls:1.27.0.202108151936(id=971)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:40.715
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:40.799
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-30 16:27:41.770
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-30 16:27:41.778
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-30 16:27:41.815
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\chinj'. If this is
>>>>>>> origin/HighRisk_SpringBoot_20220802
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:20.703
!MESSAGE Boot LS startup time from start to initialized: 2666ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:20.859
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.ogDhtzMuisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:20.862
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:20.864
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:20.865
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:20.865
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:20.866
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.ogDhtzMu => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:20.878
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:20.882
!MESSAGE buffering callback sts4.classpath.ogDhtzMu cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:20.883
!MESSAGE executing callback sts4.classpath.ogDhtzMu 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 09:33:21.251
!MESSAGE executing callback sts4.classpath.ogDhtzMu SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 12:31:28.302
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.ogDhtzMu

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 12:31:28.305
!MESSAGE unsubscribing from classpath changes: sts4.classpath.ogDhtzMu

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 12:31:28.306
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 12:31:28.306
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.ogDhtzMu => OK

!ENTRY org.eclipse.ui 2 2 2022-07-30 12:31:28.702
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-30 16:23:12.859 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-30 16:23:38.710
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-30 16:23:38.710
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:44.877
!MESSAGE Boot LS startup time from start to initialized: 4142ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:45.569
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.pTeAxuCnisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:45.573
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:45.577
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:45.579
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:45.582
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:45.584
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.pTeAxuCn => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:45.606
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:45.613
!MESSAGE buffering callback sts4.classpath.pTeAxuCn cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:45.616
!MESSAGE executing callback sts4.classpath.pTeAxuCn 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:27:46.484
!MESSAGE executing callback sts4.classpath.pTeAxuCn SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 18:49:34.682
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.pTeAxuCn

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 18:49:34.685
!MESSAGE unsubscribing from classpath changes: sts4.classpath.pTeAxuCn

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 18:49:34.688
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 18:49:34.690
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.pTeAxuCn => OK

!ENTRY org.eclipse.ui 2 2 2022-07-30 18:49:35.038
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-31 12:21:31.874 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-31 12:21:37.036
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-31 12:21:37.036
>>>>>>> origin/HighRisk_SpringBoot_20220802
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@63d43a5,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2b33f7a0,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@55159007,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-30 16:23:38.710
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@edf4973,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2a49753,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@71b6edfb,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:42.913
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:42.915
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@6394f5bd[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:42.918
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:42.965
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-30 16:23:44.143
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-30 16:23:44.144
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-30 16:23:44.182
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:41.896
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:41.899
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@1a89b2d4[org.springframework.tooling.boot.ls:1.27.0.202108151936(id=971)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:41.904
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:41.948
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-31 12:21:42.951
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-31 12:21:42.961
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-31 12:21:42.992
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\chinj'. If this is
>>>>>>> origin/HighRisk_SpringBoot_20220802
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:45.939
!MESSAGE Boot LS startup time from start to initialized: 3010ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:46.126
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.mZlCjYCVisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:46.129
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:46.131
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:46.132
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:46.132
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:46.132
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.mZlCjYCV => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:46.154
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:46.157
!MESSAGE buffering callback sts4.classpath.mZlCjYCV cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:46.157
!MESSAGE executing callback sts4.classpath.mZlCjYCV 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 16:23:46.535
!MESSAGE executing callback sts4.classpath.mZlCjYCV SUCCESS [done]

!ENTRY org.eclipse.ui 2 2 2022-07-30 18:15:37.718
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 18:51:40.060
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.mZlCjYCV

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 18:51:40.062
!MESSAGE unsubscribing from classpath changes: sts4.classpath.mZlCjYCV

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 18:51:40.063
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-30 18:51:40.063
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.mZlCjYCV => OK
!SESSION 2022-07-31 09:37:07.664 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-31 09:37:23.451
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-31 09:37:23.451
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:44.149
!MESSAGE Boot LS startup time from start to initialized: 2226ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:44.333
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.iozknAWoisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:44.338
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:44.341
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:44.344
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:44.347
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:44.349
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.iozknAWo => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:44.378
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:44.385
!MESSAGE buffering callback sts4.classpath.iozknAWo cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:44.389
!MESSAGE executing callback sts4.classpath.iozknAWo 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:21:44.670
!MESSAGE executing callback sts4.classpath.iozknAWo SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:46:04.763
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.iozknAWo

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:46:04.765
!MESSAGE unsubscribing from classpath changes: sts4.classpath.iozknAWo

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:46:04.768
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 12:46:04.770
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.iozknAWo => OK

!ENTRY org.eclipse.ui 2 2 2022-07-31 12:46:05.164
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-31 16:53:38.071 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-31 16:53:55.534
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-31 16:53:55.534
>>>>>>> origin/HighRisk_SpringBoot_20220802
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7bb888b7,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@536f389,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5825932c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-31 09:37:23.451
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@277dddcf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@321c01c2,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2b33f7a0,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:28.975
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:28.977
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@19af2b99[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:28.980
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:29.032
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-31 09:37:30.535
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-31 09:37:30.536
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-31 09:37:30.619
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:53:59.902
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:53:59.905
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@3b057381[org.springframework.tooling.boot.ls:1.27.0.202108151936(id=971)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:53:59.910
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:53:59.950
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-31 16:54:01.091
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-31 16:54:01.130
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-31 16:54:01.168
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\chinj'. If this is
>>>>>>> origin/HighRisk_SpringBoot_20220802
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:32.404
!MESSAGE Boot LS startup time from start to initialized: 3416ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:32.625
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.vmzDaazMisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:32.628
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:32.631
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:32.631
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:32.632
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:32.632
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.vmzDaazM => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:32.655
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:32.659
!MESSAGE buffering callback sts4.classpath.vmzDaazM cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:32.660
!MESSAGE executing callback sts4.classpath.vmzDaazM 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 09:37:33.078
!MESSAGE executing callback sts4.classpath.vmzDaazM SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:37:57.396
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.vmzDaazM

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:37:57.398
!MESSAGE unsubscribing from classpath changes: sts4.classpath.vmzDaazM

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:37:57.398
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:37:57.399
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.vmzDaazM => OK

!ENTRY org.eclipse.ui 2 2 2022-07-31 16:37:57.833
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-07-31 16:40:56.068 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-07-31 16:41:09.893
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-31 16:41:09.893
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:54:02.342
!MESSAGE Boot LS startup time from start to initialized: 2419ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:54:02.528
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.UeyGSRyCisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:54:02.533
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:54:02.536
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:54:02.539
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:54:02.541
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:54:02.544
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.UeyGSRyC => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:54:02.556
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:54:02.565
!MESSAGE buffering callback sts4.classpath.UeyGSRyC cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:54:02.567
!MESSAGE executing callback sts4.classpath.UeyGSRyC 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:54:02.862
!MESSAGE executing callback sts4.classpath.UeyGSRyC SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 17:54:51.528
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.UeyGSRyC

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 17:54:51.532
!MESSAGE unsubscribing from classpath changes: sts4.classpath.UeyGSRyC

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 17:54:51.535
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 17:54:51.538
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.UeyGSRyC => OK

!ENTRY org.eclipse.ui 2 2 2022-07-31 17:54:51.995
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-08-02 09:48:51.862 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-08-02 09:48:57.651
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-02 09:48:57.651
>>>>>>> origin/HighRisk_SpringBoot_20220802
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@63e81ac6,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@29767156,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@45775a15,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-07-31 16:41:09.893
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2396dc4e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7bb888b7,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6f6998b6,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:14.317
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:14.318
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@3cda1456[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:14.322
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:14.361
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-31 16:41:15.341
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-07-31 16:41:15.344
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-07-31 16:41:15.386
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:02.348
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:02.352
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@75be891f[org.springframework.tooling.boot.ls:1.27.0.202108151936(id=971)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:02.357
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:02.412
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-02 09:49:03.732
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-02 09:49:03.795
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-08-02 09:49:03.815
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\chinj'. If this is
>>>>>>> origin/HighRisk_SpringBoot_20220802
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:17.231
!MESSAGE Boot LS startup time from start to initialized: 2899ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:17.395
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.accUaMHHisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:17.397
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:17.399
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:17.400
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:17.400
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.accUaMHH => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:17.401
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:17.420
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:17.423
!MESSAGE buffering callback sts4.classpath.accUaMHH cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:17.424
!MESSAGE executing callback sts4.classpath.accUaMHH 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 16:41:17.776
!MESSAGE executing callback sts4.classpath.accUaMHH SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 17:55:21.396
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.accUaMHH

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 17:55:21.398
!MESSAGE unsubscribing from classpath changes: sts4.classpath.accUaMHH

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 17:55:21.398
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-07-31 17:55:21.399
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.accUaMHH => OK

!ENTRY org.eclipse.ui 2 2 2022-07-31 17:55:21.998
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-08-01 20:49:04.976 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-08-01 20:58:33.898
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-01 20:58:33.898
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:05.161
!MESSAGE Boot LS startup time from start to initialized: 2785ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:05.343
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.xqEbPHOeisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:05.347
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:05.351
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:05.354
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:05.357
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:05.360
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.xqEbPHOe => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:05.382
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:05.389
!MESSAGE buffering callback sts4.classpath.xqEbPHOe cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:05.392
!MESSAGE executing callback sts4.classpath.xqEbPHOe 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:49:05.740
!MESSAGE executing callback sts4.classpath.xqEbPHOe SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 11:51:44.822
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.xqEbPHOe

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 11:51:44.828
!MESSAGE unsubscribing from classpath changes: sts4.classpath.xqEbPHOe

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 11:51:44.830
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 11:51:44.833
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.xqEbPHOe => OK

!ENTRY org.eclipse.ui 2 2 2022-08-02 11:51:45.220
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-08-02 14:42:04.866 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-08-02 14:42:10.061
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-02 14:42:10.061
>>>>>>> origin/HighRisk_SpringBoot_20220802
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3bf306d3,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2f541f60,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5101b9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-01 20:58:33.898
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@40273969,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5ec25b61,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1dcc0bb8,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:38.925
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:38.926
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@7037bb06[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:38.930
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:38.997
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-01 20:58:40.751
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-01 20:58:40.752
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-08-01 20:58:40.781
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:14.935
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:14.939
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@4b68322[org.springframework.tooling.boot.ls:1.27.0.202108151936(id=971)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:14.945
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:14.990
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-02 14:42:16.472
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-02 14:42:16.502
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-08-02 14:42:16.579
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\chinj'. If this is
>>>>>>> origin/HighRisk_SpringBoot_20220802
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:50.077
!MESSAGE Boot LS startup time from start to initialized: 11136ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:50.284
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.LsmljMzHisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:50.287
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:50.289
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:50.290
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:50.290
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:50.291
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.LsmljMzH => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:50.318
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:50.322
!MESSAGE buffering callback sts4.classpath.LsmljMzH cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:50.322
!MESSAGE executing callback sts4.classpath.LsmljMzH 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 20:58:52.328
!MESSAGE executing callback sts4.classpath.LsmljMzH FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2022-08-01 20:58:52.328
!MESSAGE 
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1950)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2085)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.lsp4e 2 0 2022-08-01 21:15:44.155
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 22:59:35.934
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.LsmljMzH

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 22:59:35.935
!MESSAGE unsubscribing from classpath changes: sts4.classpath.LsmljMzH

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 22:59:35.936
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-01 22:59:35.937
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.LsmljMzH => OK

!ENTRY org.eclipse.ui 2 2 2022-08-01 22:59:36.780
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-08-02 09:16:00.528 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-08-02 09:16:08.097
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-02 09:16:08.097
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62075e3d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@63e81ac6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-02 09:16:08.097
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@45775a15,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2396dc4e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:12.806
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:12.807
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@611c18df[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:12.810
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:12.869
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-02 09:16:14.213
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-02 09:16:14.215
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-08-02 09:16:14.256
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:23.058
!MESSAGE Boot LS startup time from start to initialized: 10238ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:23.278
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.HYyvvtLrisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:23.281
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:23.283
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:23.284
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:23.285
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:23.285
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.HYyvvtLr => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:23.292
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:23.295
!MESSAGE buffering callback sts4.classpath.HYyvvtLr cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:23.296
!MESSAGE executing callback sts4.classpath.HYyvvtLr 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 09:16:25.303
!MESSAGE executing callback sts4.classpath.HYyvvtLr FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2022-08-02 09:16:25.303
!MESSAGE 
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1950)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2085)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 12:00:03.406
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.HYyvvtLr

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 12:00:03.408
!MESSAGE unsubscribing from classpath changes: sts4.classpath.HYyvvtLr

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 12:00:03.408
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 12:00:03.409
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.HYyvvtLr => OK

!ENTRY org.eclipse.ui 2 2 2022-08-02 12:00:03.856
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-08-02 14:33:00.979 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-08-02 14:33:10.914
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-02 14:33:10.914
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:18.961
!MESSAGE Boot LS startup time from start to initialized: 4000ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:19.195
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.qalCbUjbisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:19.202
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:19.207
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:19.210
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:19.213
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:19.216
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.qalCbUjb => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:19.241
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:19.253
!MESSAGE buffering callback sts4.classpath.qalCbUjb cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:19.256
!MESSAGE executing callback sts4.classpath.qalCbUjb 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:42:19.644
!MESSAGE executing callback sts4.classpath.qalCbUjb SUCCESS [done]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:40.754
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.qalCbUjb

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:40.761
!MESSAGE unsubscribing from classpath changes: sts4.classpath.qalCbUjb

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:40.764
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:40.766
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.qalCbUjb => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:51.514
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:51.517
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@4b68322[org.springframework.tooling.boot.ls:1.27.0.202108151936(id=971)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:51.521
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:53.116
!MESSAGE Boot LS startup time from start to initialized: 1592ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:53.177
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.LgXvSGLDisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:53.180
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:53.183
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:53.186
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:53.188
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:53.190
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.LgXvSGLD => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:53.224
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:53.230
!MESSAGE buffering callback sts4.classpath.LgXvSGLD cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:53.232
!MESSAGE executing callback sts4.classpath.LgXvSGLD 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:37:53.496
!MESSAGE executing callback sts4.classpath.LgXvSGLD SUCCESS [done]

!ENTRY org.eclipse.lsp4e 2 0 2022-08-02 16:44:17.694
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:44:59.406
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.LgXvSGLD

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:44:59.409
!MESSAGE unsubscribing from classpath changes: sts4.classpath.LgXvSGLD

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:44:59.411
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:44:59.414
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.LgXvSGLD => OK

!ENTRY org.eclipse.ui 2 2 2022-08-02 16:44:59.812
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
!SESSION 2022-08-02 16:45:12.560 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-08-02 16:45:17.325
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-02 16:45:17.325
>>>>>>> origin/HighRisk_SpringBoot_20220802
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@771ede0d,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7fb28ed,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
<<<<<<< HEAD
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1fd73dcb,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-02 14:33:10.914
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@54c697c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62075e3d,
=======
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@536f389,
>>>>>>> origin/HighRisk_SpringBoot_20220802
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

<<<<<<< HEAD
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:15.427
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:15.428
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@44540e6b[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:15.431
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:15.496
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-02 14:33:17.247
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-02 14:33:17.248
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-08-02 14:33:17.286
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:21.310
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:21.313
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@3dd674dd[org.springframework.tooling.boot.ls:1.27.0.202108151936(id=971)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:21.318
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:21.361
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-02 16:45:22.203
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-02 16:45:22.210
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-08-02 16:45:22.248
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\chinj'. If this is
>>>>>>> origin/HighRisk_SpringBoot_20220802
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

<<<<<<< HEAD
!ENTRY org.eclipse.lsp4e 2 0 2022-08-02 14:33:24.979
!MESSAGE Timeout waiting for data to generate LS hover
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1950)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2085)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:28.889
!MESSAGE Boot LS startup time from start to initialized: 13449ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:29.079
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.vzncGFMRisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:29.083
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:29.085
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:29.086
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:29.086
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:29.087
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.vzncGFMR => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:29.094
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:29.098
!MESSAGE buffering callback sts4.classpath.vzncGFMR cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:29.098
!MESSAGE executing callback sts4.classpath.vzncGFMR 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 14:33:31.103
!MESSAGE executing callback sts4.classpath.vzncGFMR FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2022-08-02 14:33:31.104
!MESSAGE 
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1950)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2085)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:30:43.896
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.vzncGFMR

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:30:43.899
!MESSAGE unsubscribing from classpath changes: sts4.classpath.vzncGFMR

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:30:43.900
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:30:43.903
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.vzncGFMR => OK

!ENTRY org.eclipse.ui 2 2 2022-08-02 16:30:44.382
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
=======
!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:23.378
!MESSAGE Boot LS startup time from start to initialized: 2041ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:23.551
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.omayETMMisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:23.555
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:23.559
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:23.561
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:23.564
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:23.566
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.omayETMM => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:23.572
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:23.580
!MESSAGE buffering callback sts4.classpath.omayETMM cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:23.583
!MESSAGE executing callback sts4.classpath.omayETMM 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 16:45:23.855
!MESSAGE executing callback sts4.classpath.omayETMM SUCCESS [done]
>>>>>>> origin/HighRisk_SpringBoot_20220802
!SESSION 2022-08-02 17:43:10.332 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.core.resources 4 567 2022-08-02 17:43:18.744
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2022-08-02 17:43:18.744
!MESSAGE Could not read metadata for '.org.eclipse.egit.core.cmp'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/.org.eclipse.egit.core.cmp)[567]: java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:868)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:724)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1555)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2480)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2231)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:475)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.lambda$2(BundleContextImpl.java:808)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:802)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:759)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1019)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:365)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:404)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:384)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:471)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:403)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2022-08-02 17:43:18.745
!MESSAGE The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!STACK 0
java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:868)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:724)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1555)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2480)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2231)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:475)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.lambda$2(BundleContextImpl.java:808)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:802)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:759)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1019)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:365)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:404)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:384)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:471)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:403)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2022-08-02 17:43:19.115
!MESSAGE Unable to load resource file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi
!STACK 0
org.eclipse.emf.ecore.resource.impl.ResourceSetImpl$1DiagnosticWrappedException: org.xml.sax.SAXParseExceptionpublicId: file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi; systemId: file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi; lineNumber: 2; columnNumber: 2; The markup in the document preceding the root element must be well-formed.
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.handleDemandLoadException(ResourceSetImpl.java:319)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:278)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:406)
	at org.eclipse.e4.ui.internal.workbench.ResourceHandler.getResource(ResourceHandler.java:290)
	at org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadResource(ResourceHandler.java:266)
	at org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadMostRecentModel(ResourceHandler.java:169)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.loadApplicationModel(E4Application.java:371)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.createE4Workbench(E4Application.java:247)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:573)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.xml.sax.SAXParseExceptionpublicId: file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi; systemId: file:/C:/Users/jerry/Desktop/4495project/4495back-end/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi; lineNumber: 2; columnNumber: 2; The markup in the document preceding the root element must be well-formed.
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1471)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:862)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:541)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:888)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:824)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1224)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:635)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:324)
	at org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(XMLLoadImpl.java:175)
	at org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad(XMLResourceImpl.java:261)
	at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1563)
	at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1342)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:259)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:274)
	... 23 more

!ENTRY org.eclipse.e4.ui.workbench 4 0 2022-08-02 17:43:19.116
!MESSAGE The persisted application model has no top-level window. Reinitializing with the default application model.
!STACK 0
java.lang.Exception
	at org.eclipse.e4.ui.internal.workbench.ResourceHandler.loadMostRecentModel(ResourceHandler.java:174)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.loadApplicationModel(E4Application.java:371)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application.createE4Workbench(E4Application.java:247)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:573)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jface 2 0 2022-08-02 17:43:21.878
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-02 17:43:21.878
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4b0df349,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@21f7c0be,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-02 17:43:21.878
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@48463900,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5834298c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-02 17:43:25.050
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-02 17:43:25.052
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-08-02 17:43:25.087
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:43.437
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:43.438
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@2ac76228[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:43.441
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:43.493
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:43:44.434
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.initialReconcile(JavaReconcilingStrategy.java:188)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.initialReconcile(CompositeReconcilingStrategy.java:125)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.initialReconcile(JavaCompositeReconcilingStrategy.java:139)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:98)
	at org.eclipse.jdt.internal.ui.text.JavaReconciler.initialProcess(JavaReconciler.java:419)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:177)

!ENTRY org.eclipse.jdt.ui 4 2 2022-08-02 17:43:44.437
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.initialReconcile(JavaReconcilingStrategy.java:188)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.initialReconcile(CompositeReconcilingStrategy.java:125)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.initialReconcile(JavaCompositeReconcilingStrategy.java:139)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:98)
	at org.eclipse.jdt.internal.ui.text.JavaReconciler.initialProcess(JavaReconciler.java:419)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:177)

!ENTRY org.eclipse.jdt.ui 4 0 2022-08-02 17:43:44.438
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.initialReconcile(JavaReconcilingStrategy.java:188)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.initialReconcile(CompositeReconcilingStrategy.java:125)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.initialReconcile(JavaCompositeReconcilingStrategy.java:139)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:98)
	at org.eclipse.jdt.internal.ui.text.JavaReconciler.initialProcess(JavaReconciler.java:419)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:177)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:43:44.728
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:43:44.731
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:43:44.732
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:43:45.251
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:43:45.253
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:43:45.254
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:43:45.386
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:43:45.388
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:43:45.389
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:43:45.428
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:43:45.429
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:43:45.430
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:43:45.472
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:43:45.474
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:43:45.474
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:43:45.518
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:43:45.520
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:43:45.521
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:43:45.562
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:43:45.563
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:43:45.564
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:46.044
!MESSAGE Boot LS startup time from start to initialized: 2592ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:46.243
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.WfonSvDtisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:46.246
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:46.248
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:46.249
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:46.250
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:46.251
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.WfonSvDt => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:46.259
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:46.263
!MESSAGE buffering callback sts4.classpath.WfonSvDt cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:46.264
!MESSAGE executing callback sts4.classpath.WfonSvDt 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 17:43:46.723
!MESSAGE executing callback sts4.classpath.WfonSvDt SUCCESS [done]

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:43:46.837
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:43:46.839
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:43:46.839
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:43:48.103
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:43:48.104
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:43:48.105
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:43:51.282
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:43:51.284
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:43:51.284
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:43:58.538
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:43:58.540
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:43:58.541
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:00.170
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-08-02 17:44:00.171
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-08-02 17:44:00.172
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:00.214
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:00.216
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:00.217
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:00.254
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:00.256
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:00.257
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:00.288
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:00.290
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:00.291
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:00.324
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:00.326
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:00.327
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:00.364
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:00.366
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:00.367
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:00.400
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:00.402
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:00.403
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:254)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:412)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:388)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:17.036
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:17.038
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:17.038
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:17.968
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:17.969
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:17.970
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:19.494
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:19.495
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:19.496
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:19.624
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:19.625
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:19.626
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:20.541
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:20.542
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:20.543
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:30.620
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:30.621
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:30.622
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:31.642
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:31.643
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:31.643
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:35.411
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:35.411
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:35.412
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:36.688
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:36.689
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:36.689
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:37.023
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1800)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1792)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:37.024
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1800)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1792)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:37.025
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1800)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1792)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:37.208
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:37.210
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:37.211
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:37.250
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui 4 0 2022-08-02 17:44:37.252
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:40.399
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:40.401
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:40.401
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-02 17:44:46.168
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.controllers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.apache.catalina.connector.Response;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.bind.annotation.RestController;

import com.example.CSIS4495.model.Dog;
import com.example.CSIS4495.model.DogRepository;
import com.example.CSIS4495.model.User;
import com.example.CSIS4495.model.UserRepository;

import lombok.var;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class ImageProcessingController {

	@Autowired
	UserRepository userRepository;

	@Autowired
	DogRepository dogRepository;
	
	
	@GetMapping("/getAllDogs")
	public ResponseEntity <List<Dog>> getAllDog(){
		List<Dog> dogList= dogRepository.findAll();
		List<Dog> dogNotAdopteDogs = new ArrayList<Dog>();
		for (Dog dog: dogList) {
			if (dog.getIsAdopted()==0) {
				dogNotAdopteDogs.add(dog);
			}
		}
		
		if (dogList.isEmpty()) {
			return new ResponseEntity<List<Dog>>(HttpStatus.NOT_FOUND);
		} else {
			return new ResponseEntity<List<Dog>>(dogNotAdopteDogs,HttpStatus.OK);
		}
	}	
	

	@PutMapping("/uploadImage/user/{id}")
	public ResponseEntity<User> uploadImage(@PathVariable("id") long id, @RequestBody String imageUrl)
			throws IOException {
		Optional<User> userList = userRepository.findById(id);
		if (userList.isPresent()) {
			User user = userList.get();
			user.setUserURL(imageUrl);
			userRepository.save(user);
			return new ResponseEntity<User>(user, HttpStatus.OK);
		} else
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/uploadDog/dog/{userid}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("userid") long userid,@RequestBody Dog dog){
		Optional<User>currentUser = userRepository.findById(userid);
		if (currentUser.isPresent()) {
			Dog currentDog = new Dog();
			currentDog.setDogname(dog.getDogname());
			currentDog.setDogDescription(dog.getDogDescription());
			currentDog.setDogURL(dog.getDogURL());
			currentDog.setBreed(dog.getBreed());
			currentDog.setLatitude(dog.getLatitude());
			currentDog.setLongitude(dog.getLongitude());
			currentDog.setIsAdopted(dog.getIsAdopted());
			currentDog.setVaccinationStatus(dog.getVaccinationStatus());
			currentUser.get().addDog(currentDog);
			dogRepository.save(currentDog);
			userRepository.save(currentUser.get());
			return new ResponseEntity<Dog>(currentDog,HttpStatus.OK);
		}else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	

//	@PostMapping("/uploadImage/dog/{id}")
//	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id, @RequestBody String imageUrl)
//			throws IOException {
//		Optional<Dog> dogList = dogRepository.findById(id);
//		if (dogList.isPresent()) {
//			Dog dog = dogList.get();
//			dog.setDogURL(imageUrl);
//			System.out.println(imageUrl);
//			dogRepository.save(dog);
//			return new ResponseEntity<Dog>(dog, HttpStatus.OK);
//		} else {
//			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
//		}
//	}
	
	@GetMapping("/getDog/{id}")
	public ResponseEntity<Dog> uploadDogImage(@PathVariable("id") long id){
		Optional<Dog> dogList = dogRepository.findById(id);
		if (dogList.isPresent()) {
			return new ResponseEntity<Dog>(dogList.get(), HttpStatus.OK);
		} else {
			return new ResponseEntity<Dog>(HttpStatus.NOT_FOUND);
		}
	}
	
	@PostMapping("/imageProcessing")
<<<<<<< HEAD
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws UnsupportedEncodingException{
=======
	public ResponseEntity<String> imageProcessing(@RequestBody String imageURL) throws IOException{
>>>>>>> origin/HighRisk_SpringBoot_20220802
		 	System.out.println(imageURL);
		    String decodeImageURlWithEqual =URLDecoder.decode(imageURL, StandardCharsets.UTF_8.toString());
		 	String decodeImageURl=decodeImageURlWithEqual.substring(0,decodeImageURlWithEqual.length()-1);
		 	System.out.println(decodeImageURl);
			String result = getBreedByImage(decodeImageURl);
			if(result == null) {
				return new ResponseEntity<String>(HttpStatus.NOT_FOUND);
			}
			else {
				return new ResponseEntity<String>( result ,HttpStatus.OK); 
			}
			
			
//			String tempDogBreedString = "Poodle";
//			return new ResponseEntity<String>( tempDogBreedString ,HttpStatus.OK); 
	}
	
<<<<<<< HEAD
	private String execProcess(String cmdStr) {
		
		Process process = null;
        String result = "";
        try {
            process = Runtime.getRuntime().exec(cmdStr);
            System.out.println("Process:"+process);
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
            
            String line;
            while ((line = in.readLine()) != null) {
                result = line;
            }
            in.close();
            process.waitFor();
            return result;

        } catch (Exception e) {
            e.printStackTrace();
            return result;
        } finally {
            process.destroy();
        }
	}
=======
	
//	private String execProcess(String cmdStr) {
//		
//		Process process = null;
//        String result = "";
//        try {
//            process = Runtime.getRuntime().exec(cmdStr);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "utf-8"));
//            String line;
//            while ((line = in.readLine()) != null) {
//                result = line;
//            }
//            in.close();
//            process.waitFor();
//            return result;
//
//        } catch (Exception e) {
//            e.printStackTrace();
//            return result;
//        } finally {
//            process.destroy();
//        }
//	}
>>>>>>> origin/HighRisk_SpringBoot_20220802
	
//	private String getBreedByImage(String imgUrl) {
//		
//		StringBuffer command = new StringBuffer();
//        command.append("cmd /c C:");
//        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
//        command.append("&& conda activate yolov5");
//        command.append("&& python downloadImg.py " + imgUrl);
//        command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");
//        command.append("&& conda deactive");
//        String arguments=command.toString();
//        System.out.println(arguments);
//        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println(line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
//   
//            String cmdstr = arguments;
//            String s = execProcess(cmdstr);
//            System.out.println("##################"); 
////            System.out.println(s); 
//            System.out.println("Dog Breed is: "); 
//            String[] splitStr=s.split("\\s+");
//            String breed=splitStr[splitStr.length-3];
//            breed=breed.substring(0,breed.length()-1);
//            System.out.println(breed); 
//            return breed;
//            
//       
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//		
//		
//	}
	
	private String getBreedByImage(String imgUrl) throws IOException {
		StringBuffer command = new StringBuffer();
<<<<<<< HEAD
        command.append("cmd /c C:");
        command.append("&& cd C:\\Users\\jerry\\Desktop\\4495\\yolov5-master");
//        command.append("&& activate");
        command.append("&& conda activate yolov5");
        command.append("&& python downloadImg.py " + imgUrl);
        command.append("&& python detect.py --source C:\\Users\\jerry\\Desktop\\4495\\yolov5-master\\dog_breed\\images\\temp.jpg --weights best.pt");
        command.append("&& conda deactivate");
        String arguments=command.toString();
        System.out.println(arguments);
        try {
//            Process process = Runtime.getRuntime().exec(arguments);
//            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(), "GBK"));
//            String line = null;
//            while ((line = in.readLine()) != null) {
//                System.out.println("eachLine: "+line);
//            }
//            in.close();
//            int re = process.waitFor();
//            System.out.println(process);
//            System.out.println("Call result:");
//            System.out.println(re);
//            System.out.println(arguments);
   
            String cmdstr = arguments;
            String s = execProcess(cmdstr);
            System.out.println("##################"); 
            System.out.println("Return String is: "+s); 
            System.out.println("Dog Breed is: "); 
            String[] splitStr=s.split("\\s+");
            String breed=splitStr[splitStr.length-3];
            breed=breed.substring(0,breed.length()-1);
            System.out.println(breed); 
            return breed;
            
       
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
=======
		command.append("cmd /c C:");
		command.append("&& cd C:\\Users\\chinj\\OneDrive - Douglas College\\Desktop\\4495\\yolov5");
		command.append("&& activate");
		command.append("&& conda activate yolov5");
		command.append("&& python downloadImg.py " + imgUrl);
		command.append("&& python detect.py --source dog_breed\\images\\temp.jpg --weights best.pt");

		command.append("&& conda deactivate");
		String arguments = command.toString();

		Process p = Runtime.getRuntime().exec(arguments);
		final InputStream is1 = p.getInputStream();
		new Thread(new Runnable() {
			public void run() {
				BufferedReader br = new BufferedReader(new InputStreamReader(is1));
				try {
					String outputLine = null;
					while ((outputLine = br.readLine()) != null) {
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}).start();
		InputStream is2 = p.getErrorStream();
		BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
		StringBuilder buf = new StringBuilder();
		String line = null;

		while ((line = br2.readLine()) != null) {
			//System.out.println(line);
			String[] temp = line.split("\\s+");
			
			if (temp[0].equals("image")) {
				buf.append(temp[temp.length - 3] + "\n");
				//System.out.println(temp.length);
			}
			if (temp.length==9) {
				
				buf.setLength(0);
				buf.append("Not detected  ");
			}
			
			
		}
		
		//System.out.println(buf);
		String result = buf.substring(0, buf.length() - 2);
>>>>>>> origin/HighRisk_SpringBoot_20220802
		
		while (br2.readLine() != null)
			;
		try {
			p.waitFor();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		return result;
			
			
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-08-02 17:44:46.169
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-08-02 17:44:46.170
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.ui 2 2 2022-08-02 17:46:46.213
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)

!ENTRY org.eclipse.jdt.ui 4 10001 2022-08-02 17:48:09.462
!MESSAGE Internal Error
!STACK 1
org.eclipse.jdt.internal.ui.JavaUIException: Problems reading information from XML 'QualifiedTypeNameHistory.xml'
	at org.eclipse.jdt.internal.corext.util.History.createException(History.java:77)
	at org.eclipse.jdt.internal.corext.util.History.load(History.java:258)
	at org.eclipse.jdt.internal.corext.util.History.load(History.java:174)
	at org.eclipse.jdt.internal.corext.util.QualifiedTypeNameHistory.<init>(QualifiedTypeNameHistory.java:36)
	at org.eclipse.jdt.internal.corext.util.QualifiedTypeNameHistory.getDefault(QualifiedTypeNameHistory.java:29)
	at org.eclipse.jdt.internal.ui.text.java.LazyJavaTypeCompletionProposal.computeRelevance(LazyJavaTypeCompletionProposal.java:399)
	at org.eclipse.jdt.internal.ui.text.java.LazyJavaCompletionProposal.getRelevance(LazyJavaCompletionProposal.java:384)
	at org.eclipse.jdt.ui.text.java.CompletionProposalComparator.getRelevance(CompletionProposalComparator.java:85)
	at org.eclipse.jdt.ui.text.java.CompletionProposalComparator.compare(CompletionProposalComparator.java:61)
	at org.eclipse.jdt.ui.text.java.CompletionProposalComparator.compare(CompletionProposalComparator.java:1)
	at org.eclipse.jdt.internal.ui.text.java.RelevanceSorter.compare(RelevanceSorter.java:40)
	at java.base/java.util.TimSort.binarySort(TimSort.java:296)
	at java.base/java.util.TimSort.sort(TimSort.java:239)
	at java.base/java.util.Arrays.sort(Arrays.java:1306)
	at java.base/java.util.ArrayList.sort(ArrayList.java:1721)
	at java.base/java.util.Collections$SynchronizedList.sort(Collections.java:2504)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.sortProposals(CompletionProposalPopup.java:1999)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1181)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$4(AsyncCompletionProposalPopup.java:257)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
Caused by: org.xml.sax.SAXParseException; lineNumber: 60; columnNumber: 2; The content of elements must consist of well-formed character data or markup.
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1471)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2588)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2678)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:541)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:888)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:824)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:246)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.eclipse.jdt.internal.corext.util.History.load(History.java:256)
	... 42 more
!SUBENTRY 1 org.eclipse.jdt.ui 4 4 2022-08-02 17:48:09.463
!MESSAGE Problems reading information from XML 'QualifiedTypeNameHistory.xml'
!STACK 0
org.xml.sax.SAXParseException; lineNumber: 60; columnNumber: 2; The content of elements must consist of well-formed character data or markup.
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1471)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2588)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2678)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:541)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:888)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:824)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:246)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.eclipse.jdt.internal.corext.util.History.load(History.java:256)
	at org.eclipse.jdt.internal.corext.util.History.load(History.java:174)
	at org.eclipse.jdt.internal.corext.util.QualifiedTypeNameHistory.<init>(QualifiedTypeNameHistory.java:36)
	at org.eclipse.jdt.internal.corext.util.QualifiedTypeNameHistory.getDefault(QualifiedTypeNameHistory.java:29)
	at org.eclipse.jdt.internal.ui.text.java.LazyJavaTypeCompletionProposal.computeRelevance(LazyJavaTypeCompletionProposal.java:399)
	at org.eclipse.jdt.internal.ui.text.java.LazyJavaCompletionProposal.getRelevance(LazyJavaCompletionProposal.java:384)
	at org.eclipse.jdt.ui.text.java.CompletionProposalComparator.getRelevance(CompletionProposalComparator.java:85)
	at org.eclipse.jdt.ui.text.java.CompletionProposalComparator.compare(CompletionProposalComparator.java:61)
	at org.eclipse.jdt.ui.text.java.CompletionProposalComparator.compare(CompletionProposalComparator.java:1)
	at org.eclipse.jdt.internal.ui.text.java.RelevanceSorter.compare(RelevanceSorter.java:40)
	at java.base/java.util.TimSort.binarySort(TimSort.java:296)
	at java.base/java.util.TimSort.sort(TimSort.java:239)
	at java.base/java.util.Arrays.sort(Arrays.java:1306)
	at java.base/java.util.ArrayList.sort(ArrayList.java:1721)
	at java.base/java.util.Collections$SynchronizedList.sort(Collections.java:2504)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.sortProposals(CompletionProposalPopup.java:1999)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1181)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$4(AsyncCompletionProposalPopup.java:257)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 18:21:09.910
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.WfonSvDt

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 18:21:09.910
!MESSAGE unsubscribing from classpath changes: sts4.classpath.WfonSvDt

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 18:21:09.911
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 18:21:09.911
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.WfonSvDt => OK
!SESSION 2022-08-02 21:11:21.788 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-08-02 21:11:32.497
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-02 21:11:32.497
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@61e4a072,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@32f2de5c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-02 21:11:32.497
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1a6df932,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74120029,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:37.109
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:37.110
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@549cca30[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:37.113
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:37.175
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-02 21:11:38.770
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-02 21:11:38.771
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-08-02 21:11:38.841
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:40.255
!MESSAGE Boot LS startup time from start to initialized: 3132ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:40.455
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.jhwVEPaLisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:40.459
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:40.461
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:40.461
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:40.462
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:40.462
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.jhwVEPaL => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:40.486
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:40.489
!MESSAGE buffering callback sts4.classpath.jhwVEPaL cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:40.490
!MESSAGE executing callback sts4.classpath.jhwVEPaL 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:11:40.884
!MESSAGE executing callback sts4.classpath.jhwVEPaL SUCCESS [done]

!ENTRY org.eclipse.lsp4e 2 0 2022-08-02 21:27:29.791
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:02.789
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.jhwVEPaL

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:02.789
!MESSAGE unsubscribing from classpath changes: sts4.classpath.jhwVEPaL

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:02.790
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:02.790
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.jhwVEPaL => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:04.147
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:04.148
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@549cca30[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:04.148
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:06.053
!MESSAGE Boot LS startup time from start to initialized: 1904ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:06.130
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.tlOSZZOmisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:06.130
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:06.131
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:06.131
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:06.132
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:06.132
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.tlOSZZOm => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:06.137
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:06.140
!MESSAGE buffering callback sts4.classpath.tlOSZZOm cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:06.141
!MESSAGE executing callback sts4.classpath.tlOSZZOm 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 21:53:06.505
!MESSAGE executing callback sts4.classpath.tlOSZZOm SUCCESS [done]

!ENTRY org.eclipse.lsp4e 2 0 2022-08-02 22:09:34.132
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2022-08-02 22:38:02.382
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:385)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2086)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.ui 2 2 2022-08-02 22:52:47.087
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 23:50:39.226
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.tlOSZZOm

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 23:50:39.227
!MESSAGE unsubscribing from classpath changes: sts4.classpath.tlOSZZOm

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 23:50:39.228
!MESSAGE subsribers = {}

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-02 23:50:39.228
!MESSAGE ClasspathListenerHandler removeClasspathListener sts4.classpath.tlOSZZOm => OK
!SESSION 2022-08-03 08:28:02.031 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=14.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-08-03 08:29:28.963
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-03 08:29:28.963
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@54c697c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62075e3d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-08-03 08:29:28.964
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@63e81ac6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@45775a15,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:36.804
!MESSAGE Entering DelegatingStreamConnectionProvider()

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:36.806
!MESSAGE DelegatingStreamConnectionProvider classloader = org.eclipse.osgi.internal.loader.EquinoxClassLoader@151ba1d[org.springframework.tooling.boot.ls:1.29.0.202112031705(id=974)]

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:36.810
!MESSAGE SpringBootLanguageServer exists!

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:36.876
!MESSAGE Instantiating ReusableClasspathListenerHandler

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-03 08:29:38.895
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-08-03 08:29:38.896
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-08-03 08:29:38.957
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\jerry'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:48.058
!MESSAGE Boot LS startup time from start to initialized: 11234ms

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:48.313
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.zWfDDsOuisBatched = true

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:48.316
!MESSAGE Setting up ClasspathListenerManager

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:48.319
!MESSAGE Scheduling initial event for all projects ...

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:48.320
!MESSAGE Scheduling initial event for all projects DONE

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:48.320
!MESSAGE exists = true open = true => deleted = false

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:48.321
!MESSAGE ClasspathListenerHandler addClasspathListener sts4.classpath.zWfDDsOu => OK

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:48.346
!MESSAGE classpath=99 entries

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:48.350
!MESSAGE buffering callback sts4.classpath.zWfDDsOu cannine_life_matter false 99

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:48.351
!MESSAGE executing callback sts4.classpath.zWfDDsOu 1 batched events

!ENTRY org.springframework.tooling.ls.eclipse.commons 1 0 2022-08-03 08:29:50.367
!MESSAGE executing callback sts4.classpath.zWfDDsOu FAILED

!ENTRY org.springframework.tooling.ls.eclipse.commons 4 0 2022-08-03 08:29:50.368
!MESSAGE 
!STACK 0
java.util.concurrent.TimeoutException
	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1950)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2085)
	at org.springframework.tooling.ls.eclipse.commons.LSP4ECommandExecutor.executeClientCommand(LSP4ECommandExecutor.java:37)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.flush(SendClasspathNotificationsJob.java:178)
	at org.springframework.tooling.jdt.ls.commons.classpath.SendClasspathNotificationsJob.run(SendClasspathNotificationsJob.java:149)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-03 10:33:22.910
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.model;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

import javax.persistence.Table;
import javax.persistence.Transient;

import com.fasterxml.jackson.annotation.JsonIgnore;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.OneToMany;

@Entity
@Table(name = "User")
public class User {

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private long id;

	@Column(name = "username")
	private String username;

	@Column(name = "password")
	private String password;

	@Column(name = "phoneNumber")
	private String phoneNumber;

	@Column(name = "email")
	private String email;

	@Column(name = "address")
	private String address;

	@Column(name = "userurl", length = 10000000)
	private String userURL;
	
	@Column(name = "Admin")
	private int isAdmin;

	@JsonIgnore
	@OneToMany(mappedBy = "owner", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	private Set<Dog> dogs = new HashSet<>();
	
	@JsonIgnore
	@OneToMany(mappedBy = "owner", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	private Set<Bulletin> bullletin = new HashSet<>();
	
	@Column(name = "notification")
	private String notification; 

	
	public User() {
		super();
	}

	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getPhoneNumber() {
		return phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public Set<Dog> getDogs() {
		return dogs;
	}

	public void setDogs(Set<Dog> dogs) {
		this.dogs = dogs;
	}

	public void addDog(Dog dog) {
		this.dogs.add(dog);
		dog.setOwner(this);
	}

	public String getUserURL() {
		return userURL;
	}

	public void setUserURL(String userURL) {
		this.userURL = userURL;
	}
	
	public void addBullletin(Bulletin bulletin) {
		this.bullletin.add(bulletin);
		bulletin.setOwner(this);
	}

	public int getIsAdmin() {
		return isAdmin;
	}

	public void setIsAdmin(int isAdmin) {
		this.isAdmin = isAdmin;
	}

	public Set<Bulletin> getBullletin() {
		return bullletin;
	}	

	public void setBullletin(Set<Bulletin> bullletin) {
		this.bullletin = bullletin;
	}

	public String getNotification() {
		return notification;
	}

	public void addNotification(String dogName) {
		if (this.notification==null||this.notification=="") {
			this.notification = dogName;
		} else {
			String currentString = this.notification;
			currentString+""
			
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-08-03 10:33:22.912
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-08-03 10:33:22.913
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-08-03 10:33:23.926
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.CSIS4495.model;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

import javax.persistence.Table;
import javax.persistence.Transient;

import com.fasterxml.jackson.annotation.JsonIgnore;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.OneToMany;

@Entity
@Table(name = "User")
public class User {

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private long id;

	@Column(name = "username")
	private String username;

	@Column(name = "password")
	private String password;

	@Column(name = "phoneNumber")
	private String phoneNumber;

	@Column(name = "email")
	private String email;

	@Column(name = "address")
	private String address;

	@Column(name = "userurl", length = 10000000)
	private String userURL;
	
	@Column(name = "Admin")
	private int isAdmin;

	@JsonIgnore
	@OneToMany(mappedBy = "owner", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	private Set<Dog> dogs = new HashSet<>();
	
	@JsonIgnore
	@OneToMany(mappedBy = "owner", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	private Set<Bulletin> bullletin = new HashSet<>();
	
	@Column(name = "notification")
	private String notification; 

	
	public User() {
		super();
	}

	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getPhoneNumber() {
		return phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public Set<Dog> getDogs() {
		return dogs;
	}

	public void setDogs(Set<Dog> dogs) {
		this.dogs = dogs;
	}

	public void addDog(Dog dog) {
		this.dogs.add(dog);
		dog.setOwner(this);
	}

	public String getUserURL() {
		return userURL;
	}

	public void setUserURL(String userURL) {
		this.userURL = userURL;
	}
	
	public void addBullletin(Bulletin bulletin) {
		this.bullletin.add(bulletin);
		bulletin.setOwner(this);
	}

	public int getIsAdmin() {
		return isAdmin;
	}

	public void setIsAdmin(int isAdmin) {
		this.isAdmin = isAdmin;
	}

	public Set<Bulletin> getBullletin() {
		return bullletin;
	}	

	public void setBullletin(Set<Bulletin> bullletin) {
		this.bullletin = bullletin;
	}

	public String getNotification() {
		return notification;
	}

	public void addNotification(String dogName) {
		if (this.notification==null||this.notification=="") {
			this.notification = dogName;
		} else {
			String currentString = this.notification;
			currentString+","
			
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-08-03 10:33:23.928
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-08-03 10:33:23.928
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
